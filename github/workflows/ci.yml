name: CI/CD Pipeline para Lacrei Saúde API

on:
  push:
    branches: [ "main" ] # Este workflow só é executado em pushes para a branch 'main'

jobs:
  # --- Job de Testes (CI - Integração Contínua) ---
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Baixar o código do repositório
        uses: actions/checkout@v3

      - name: 2. Configurar o Python e Poetry
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - uses: snok/install-poetry@v1

      - name: 3. Instalar as dependências
        run: poetry install

      - name: 4. Executar os testes
        # Usamos as variáveis de ambiente aqui para que os testes rodem
        # com uma configuração parecida com a de produção, mas usando um banco de teste.
        run: |
          export SECRET_KEY='test-secret-key'
          export DEBUG='True'
          poetry run python manage.py test

  # --- Job de Deploy (CD - Entrega Contínua) ---
  deploy:
    # Este job só começa se o job 'build-and-test' for bem-sucedido
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: 1. Baixar o código do repositório
        uses: actions/checkout@v3

      - name: 2. Configurar as credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1 # IMPORTANTE: Mude para a sua região da AWS!

      - name: 3. Gerar o ficheiro .zip para deploy
        run: zip -r deploy.zip . -x ".git/*" ".github/*"

      - name: 4. Enviar o pacote para o AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          application_name: lacrei-saude-api # O nome da sua aplicação no EB
          environment_name: Lacrei-saude-api-env # O nome do seu ambiente no EB
          version_label: "v1.2.0-${{ github.sha }}" # Uma etiqueta de versão única
          deployment_package: deploy.zip
